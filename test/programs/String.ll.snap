; ModuleID = 'whacko'
source_filename = "whacko"
target triple = "wasm32-wasi"

@"Hello world~666" = constant [12 x i8] c"Hello world\00"

declare void @__whacko_gc_initialize()

declare ptr @__whacko_gc_alloc(i32, i32)

declare void @__whacko_gc_store_field_ptr(i32, ptr, ptr, ptr)

define void @_start() gc "shadow-stack" {
entry:
  call void @__whacko_gc_initialize()
  %"variable-a-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"variable-a-alloca~0", ptr null)
  %"result~669" = call ptr @__whacko_gc_alloc(i32 1, i32 add (i32 ptrtoint (ptr getelementptr ({ ptr, ptr, i32, i32 }, ptr null, i32 1) to i32), i32 11))
  %"gep~670" = getelementptr { ptr, ptr, i32, i32 }, ptr %"result~669", i32 1, i32 0
  call void @llvm.memcpy.p0.p0.i32(ptr %"gep~670", ptr @"Hello world~666", i32 11, i1 false)
  store ptr %"result~669", ptr %"variable-a-alloca~0", align 8
  %"661~inst" = load ptr, ptr %"variable-a-alloca~0", align 8
  call void @__whacko_console_log(ptr %"661~inst")
  ret void
}

declare void @__whacko_console_log(ptr)

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #1

declare void @__whacko_gc_visit(ptr)

define void @__visit_whacko_object(ptr %0) {
"entry~671":
  %"typeGEP~673" = getelementptr { ptr, ptr, i32, i32 }, ptr %0, i32 2
  %1 = load i32, ptr %"typeGEP~673", align 4
  switch i32 %1, label %"unreachable~672" [
    i32 1, label %"classType:[std/String.wo]String<>"
  ]

"unreachable~672":                                ; preds = %"entry~671"
  unreachable

"classType:[std/String.wo]String<>":              ; preds = %"entry~671"
  ret void
}

attributes #0 = { nounwind }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
