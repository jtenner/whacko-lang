; ModuleID = 'whacko'
source_filename = "whacko"
target triple = "wasm32-wasi"

declare void @__whacko_gc_initialize()

declare ptr @__whacko_gc_alloc(i32, i32)

declare void @__whacko_gc_store_field_ptr(i32, ptr, ptr, ptr)

define void @_start() gc "shadow-stack" {
entry:
  call void @__whacko_gc_initialize()
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  %"variable-a-alloca~1" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"variable-a-alloca~1", ptr null)
  %"generated-alloca~2" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~2", ptr null)
  %"variable-b-alloca~3" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"variable-b-alloca~3", ptr null)
  %"generated-alloca~4" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~4", ptr null)
  %"variable-c-alloca~5" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"variable-c-alloca~5", ptr null)
  %"generated-alloca~6" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~6", ptr null)
  %"variable-d-alloca~7" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"variable-d-alloca~7", ptr null)
  %"generated-alloca~8" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~8", ptr null)
  %"generated-alloca~9" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~9", ptr null)
  %"generated-alloca~10" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~10", ptr null)
  %"generated-alloca~11" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~11", ptr null)
  %"result~241" = call ptr @__whacko_gc_alloc(i32 1, i32 ptrtoint (ptr getelementptr ({ ptr, ptr, i32, i32 }, ptr null, i32 1) to i32))
  store ptr %"result~241", ptr %"generated-alloca~0", align 8
  call void @"callable:[test/programs/simpleInterface.wo]A.constructor;methodType:classType:[test/programs/simpleInterface.wo]A<>#()=>voidType"(ptr %"result~241")
  store ptr %"result~241", ptr %"variable-a-alloca~1", align 8
  %"result~243" = call ptr @__whacko_gc_alloc(i32 2, i32 ptrtoint (ptr getelementptr ({ ptr, ptr, i32, i32 }, ptr null, i32 1) to i32))
  store ptr %"result~243", ptr %"generated-alloca~2", align 8
  call void @"callable:[test/programs/simpleInterface.wo]B.constructor;methodType:classType:[test/programs/simpleInterface.wo]B<>#()=>voidType"(ptr %"result~243")
  store ptr %"result~243", ptr %"variable-b-alloca~3", align 8
  %"result~245" = call ptr @__whacko_gc_alloc(i32 3, i32 ptrtoint (ptr getelementptr ({ ptr, ptr, i32, i32 }, ptr null, i32 1) to i32))
  store ptr %"result~245", ptr %"generated-alloca~4", align 8
  call void @"callable:[test/programs/simpleInterface.wo]C.constructor;methodType:classType:[test/programs/simpleInterface.wo]C<>#()=>voidType"(ptr %"result~245")
  store ptr %"result~245", ptr %"variable-c-alloca~5", align 8
  %"result~247" = call ptr @__whacko_gc_alloc(i32 4, i32 ptrtoint (ptr getelementptr ({ ptr, ptr, i32, i32 }, ptr null, i32 1) to i32))
  store ptr %"result~247", ptr %"generated-alloca~6", align 8
  call void @"callable:[test/programs/simpleInterface.wo]D.constructor;methodType:classType:[test/programs/simpleInterface.wo]D<>#()=>voidType"(ptr %"result~247")
  store ptr %"result~247", ptr %"variable-d-alloca~7", align 8
  %"111~inst" = load ptr, ptr %"variable-a-alloca~1", align 8
  store ptr %"111~inst", ptr %"generated-alloca~8", align 8
  %"116~inst" = call i32 @callTest(ptr %"111~inst")
  %"122~inst" = icmp eq i32 %"116~inst", 42
  br i1 %"122~inst", label %"next~125", label %"falsy~124"

"falsy~124":                                      ; preds = %entry
  unreachable

"next~125":                                       ; preds = %entry
  %"129~inst" = load ptr, ptr %"variable-b-alloca~3", align 8
  store ptr %"129~inst", ptr %"generated-alloca~9", align 8
  %"133~inst" = call i32 @callTest(ptr %"129~inst")
  %"139~inst" = icmp eq i32 %"133~inst", 69
  br i1 %"139~inst", label %"next~142", label %"falsy~141"

"falsy~141":                                      ; preds = %"next~125"
  unreachable

"next~142":                                       ; preds = %"next~125"
  %"146~inst" = load ptr, ptr %"variable-c-alloca~5", align 8
  store ptr %"146~inst", ptr %"generated-alloca~10", align 8
  %"150~inst" = call i32 @callTest(ptr %"146~inst")
  %"156~inst" = icmp eq i32 %"150~inst", 123
  br i1 %"156~inst", label %"next~159", label %"falsy~158"

"falsy~158":                                      ; preds = %"next~142"
  unreachable

"next~159":                                       ; preds = %"next~142"
  %"163~inst" = load ptr, ptr %"variable-d-alloca~7", align 8
  store ptr %"163~inst", ptr %"generated-alloca~11", align 8
  %"167~inst" = call i32 @callTest(ptr %"163~inst")
  %"173~inst" = icmp eq i32 %"167~inst", 456
  br i1 %"173~inst", label %"next~176", label %"falsy~175"

"falsy~175":                                      ; preds = %"next~159"
  unreachable

"next~176":                                       ; preds = %"next~159"
  ret void
}

define void @"callable:[test/programs/simpleInterface.wo]A.constructor;methodType:classType:[test/programs/simpleInterface.wo]A<>#()=>voidType"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret void
}

define void @"callable:[test/programs/simpleInterface.wo]B.constructor;methodType:classType:[test/programs/simpleInterface.wo]B<>#()=>voidType"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret void
}

define void @"callable:[test/programs/simpleInterface.wo]C.constructor;methodType:classType:[test/programs/simpleInterface.wo]C<>#()=>voidType"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret void
}

define void @"callable:[test/programs/simpleInterface.wo]D.constructor;methodType:classType:[test/programs/simpleInterface.wo]D<>#()=>voidType"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret void
}

define i32 @callTest(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  %"182~inst" = load ptr, ptr %"generated-alloca~0", align 8
  %"186~inst" = call i32 @"callable:[test/programs/simpleInterface.wo]Test.test;methodType:interfaceType:[test/programs/simpleInterface.wo]Test<>#()=>i32Type"(ptr %"182~inst")
  ret i32 %"186~inst"
}

define i32 @"callable:[test/programs/simpleInterface.wo]Test.test;methodType:interfaceType:[test/programs/simpleInterface.wo]Test<>#()=>i32Type"(ptr %0) {
"entry~248":
  %"typeGEP~249" = getelementptr { ptr, ptr, i32, i32 }, ptr %0, i32 2
  %1 = load i32, ptr %"typeGEP~249", align 4
  switch i32 %1, label %"default~250" [
    i32 1, label %"callable:[test/programs/simpleInterface.wo]A.test;methodType:classType:[test/programs/simpleInterface.wo]A<>#()=>i32Type"
    i32 2, label %"callable:[test/programs/simpleInterface.wo]B.test;methodType:classType:[test/programs/simpleInterface.wo]B<>#()=>i32Type"
    i32 3, label %"callable:[test/programs/simpleInterface.wo]C.test;methodType:classType:[test/programs/simpleInterface.wo]C<>#()=>i32Type"
    i32 4, label %"callable:[test/programs/simpleInterface.wo]D.test;methodType:classType:[test/programs/simpleInterface.wo]D<>#()=>i32Type"
  ]

"default~250":                                    ; preds = %"entry~248"
  unreachable

"callable:[test/programs/simpleInterface.wo]A.test;methodType:classType:[test/programs/simpleInterface.wo]A<>#()=>i32Type": ; preds = %"entry~248"
  %2 = call i32 @"callable:[test/programs/simpleInterface.wo]A.test;methodType:classType:[test/programs/simpleInterface.wo]A<>#()=>i32Type"(ptr %0)
  ret i32 %2

"callable:[test/programs/simpleInterface.wo]B.test;methodType:classType:[test/programs/simpleInterface.wo]B<>#()=>i32Type": ; preds = %"entry~248"
  %3 = call i32 @"callable:[test/programs/simpleInterface.wo]B.test;methodType:classType:[test/programs/simpleInterface.wo]B<>#()=>i32Type"(ptr %0)
  ret i32 %3

"callable:[test/programs/simpleInterface.wo]C.test;methodType:classType:[test/programs/simpleInterface.wo]C<>#()=>i32Type": ; preds = %"entry~248"
  %4 = call i32 @"callable:[test/programs/simpleInterface.wo]C.test;methodType:classType:[test/programs/simpleInterface.wo]C<>#()=>i32Type"(ptr %0)
  ret i32 %4

"callable:[test/programs/simpleInterface.wo]D.test;methodType:classType:[test/programs/simpleInterface.wo]D<>#()=>i32Type": ; preds = %"entry~248"
  %5 = call i32 @"callable:[test/programs/simpleInterface.wo]D.test;methodType:classType:[test/programs/simpleInterface.wo]D<>#()=>i32Type"(ptr %0)
  ret i32 %5
}

define i32 @"callable:[test/programs/simpleInterface.wo]A.test;methodType:classType:[test/programs/simpleInterface.wo]A<>#()=>i32Type"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret i32 42
}

define i32 @"callable:[test/programs/simpleInterface.wo]B.test;methodType:classType:[test/programs/simpleInterface.wo]B<>#()=>i32Type"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret i32 69
}

define i32 @"callable:[test/programs/simpleInterface.wo]C.test;methodType:classType:[test/programs/simpleInterface.wo]C<>#()=>i32Type"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret i32 123
}

define i32 @"callable:[test/programs/simpleInterface.wo]D.test;methodType:classType:[test/programs/simpleInterface.wo]D<>#()=>i32Type"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  ret i32 456
}

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare void @__whacko_gc_visit(ptr)

define void @__visit_whacko_object(ptr %0) {
"entry~251":
  %"typeGEP~253" = getelementptr { ptr, ptr, i32, i32 }, ptr %0, i32 2
  %1 = load i32, ptr %"typeGEP~253", align 4
  switch i32 %1, label %"unreachable~252" [
    i32 1, label %"classType:[test/programs/simpleInterface.wo]A<>"
    i32 2, label %"classType:[test/programs/simpleInterface.wo]B<>"
    i32 3, label %"classType:[test/programs/simpleInterface.wo]C<>"
    i32 4, label %"classType:[test/programs/simpleInterface.wo]D<>"
    i32 5, label %"classType:[std/String.wo]String<>"
  ]

"unreachable~252":                                ; preds = %"entry~251"
  unreachable

"classType:[test/programs/simpleInterface.wo]A<>": ; preds = %"entry~251"
  ret void

"classType:[test/programs/simpleInterface.wo]B<>": ; preds = %"entry~251"
  ret void

"classType:[test/programs/simpleInterface.wo]C<>": ; preds = %"entry~251"
  ret void

"classType:[test/programs/simpleInterface.wo]D<>": ; preds = %"entry~251"
  ret void

"classType:[std/String.wo]String<>":              ; preds = %"entry~251"
  ret void
}

attributes #0 = { nounwind }
