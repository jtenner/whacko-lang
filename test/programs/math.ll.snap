; ModuleID = 'whacko'
source_filename = "whacko"
target triple = "wasm32-wasi"

declare void @__whacko_gc_initialize()

declare ptr @__whacko_gc_alloc(i32, i32)

declare void @__whacko_gc_store_field_ptr(i32, ptr, ptr, ptr)

define void @_start() gc "shadow-stack" {
entry:
  call void @__whacko_gc_initialize()
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  %"variable-foo-alloca~1" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"variable-foo-alloca~1", ptr null)
  %"generated-alloca~2" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~2", ptr null)
  %"result~316" = call ptr @__whacko_gc_alloc(i32 1, i32 ptrtoint (ptr getelementptr ({ ptr, ptr, i32, i32, i32 }, ptr null, i32 1) to i32))
  store ptr %"result~316", ptr %"generated-alloca~0", align 8
  call void @"callable:[test/programs/math.wo]Foo.constructor;methodType:classType:[test/programs/math.wo]Foo<>#()=>voidType"(ptr %"result~316")
  store ptr %"result~316", ptr %"variable-foo-alloca~1", align 8
  %"284~inst" = call float @asinf(float 1.000000e+00)
  %"288~inst" = call double @"callable:[test/programs/math.wo]bar;functionType:()=>f64Type"()
  %"291~inst" = fsub double %"288~inst", 1.000000e+00
  %"296~inst" = call double @asin(double %"291~inst")
  %"297~inst" = load ptr, ptr %"variable-foo-alloca~1", align 8
  store ptr %"297~inst", ptr %"generated-alloca~2", align 8
  tail call void @free(ptr %"297~inst")
  ret void
}

define void @"callable:[test/programs/math.wo]Foo.constructor;methodType:classType:[test/programs/math.wo]Foo<>#()=>voidType"(ptr %0) gc "shadow-stack" {
entry:
  %"generated-alloca~0" = alloca ptr, align 8
  call void @llvm.gcroot(ptr %"generated-alloca~0", ptr null)
  store ptr %0, ptr %"generated-alloca~0", align 8
  %"306~inst" = load ptr, ptr %"generated-alloca~0", align 8
  %"gep~317" = getelementptr { ptr, ptr, i32, i32, i32 }, ptr %"306~inst", i32 0, i32 4
  %"307~inst" = load i32, ptr %"gep~317", align 4
  %"gep~318" = getelementptr { ptr, ptr, i32, i32, i32 }, ptr %"306~inst", i32 0, i32 4
  store i32 0, ptr %"gep~318", align 4
  ret void
}

declare float @asinf(float)

define double @"callable:[test/programs/math.wo]bar;functionType:()=>f64Type"() gc "shadow-stack" {
entry:
  ret double 2.000000e+00
}

declare double @asin(double)

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare void @free(ptr) #1

declare void @__whacko_gc_visit(ptr)

define void @__visit_whacko_object(ptr %0) {
"entry~319":
  %"typeGEP~321" = getelementptr { ptr, ptr, i32, i32 }, ptr %0, i32 2
  %1 = load i32, ptr %"typeGEP~321", align 4
  switch i32 %1, label %"unreachable~320" [
    i32 1, label %"classType:[test/programs/math.wo]Foo<>"
    i32 2, label %"classType:[std/String.wo]String<>"
  ]

"unreachable~320":                                ; preds = %"entry~319"
  unreachable

"classType:[test/programs/math.wo]Foo<>":         ; preds = %"entry~319"
  ret void

"classType:[std/String.wo]String<>":              ; preds = %"entry~319"
  ret void
}

attributes #0 = { nounwind }
attributes #1 = { "alloc-family"="malloc" "allockind"="free" }
