; ModuleID = 'whacko'
source_filename = "whacko"
target triple = "wasm32-wasi"

define void @_start() {
entry:
  %"alloca~0.i" = alloca ptr, align 8
  %"alloca~0" = alloca ptr, align 8
  %"150~inst" = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (ptr, ptr null, i32 1) to i32))
  store i32 1, ptr %"150~inst", align 4
  %"sizeOfGEP~173" = getelementptr ptr, ptr %"150~inst", i32 1
  store i32 ptrtoint (ptr getelementptr (ptr, ptr null, i32 1) to i32), ptr %"sizeOfGEP~173", align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %"alloca~0.i")
  store ptr %"150~inst", ptr %"alloca~0.i", align 8
  %"gep~174.i" = getelementptr { i32, i32, i32 }, ptr %"alloca~0.i", i32 2
  %"168~inst.i" = load i32, ptr %"gep~174.i", align 4
  %"gep~175.i" = getelementptr { i32, i32, i32 }, ptr %"alloca~0.i", i32 2
  store i32 0, ptr %"gep~175.i", align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %"alloca~0.i")
  store ptr %"150~inst", ptr %"alloca~0", align 8
  %"155~inst" = call float @asinf(float 1.000000e+00)
  %"159~inst" = fsub double 2.000000e+00, 1.000000e+00
  %"161~inst" = call double @asin(double %"159~inst")
  %"162~inst" = load ptr, ptr %"alloca~0", align 8
  tail call void @free(ptr %"162~inst")
  ret void
}

define void @"callable:[test/programs/math.wo]Foo.constructor;methodType:classType:[test/programs/math.wo]Foo<>#()=>voidType"(ptr %0) {
entry:
  %"alloca~0" = alloca ptr, align 8
  store ptr %0, ptr %"alloca~0", align 8
  %"gep~174" = getelementptr { i32, i32, i32 }, ptr %"alloca~0", i32 2
  %"168~inst" = load i32, ptr %"gep~174", align 4
  %"gep~175" = getelementptr { i32, i32, i32 }, ptr %"alloca~0", i32 2
  store i32 0, ptr %"gep~175", align 4
  ret void
}

declare float @asinf(float)

define double @"callable:[test/programs/math.wo]bar;functionType:()=>f64Type"() {
entry:
  ret double 2.000000e+00
}

declare double @asin(double)

declare noalias ptr @malloc(i32) #0

declare void @free(ptr) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

attributes #0 = { "alloc-family"="malloc" "allockind"="alloc,zeroed" "allocsize"="0" }
attributes #1 = { "alloc-family"="malloc" "allockind"="free" }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
