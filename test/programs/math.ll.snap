; ModuleID = 'whacko'
source_filename = "whacko"
target triple = "wasm32-wasi"

declare void @__whacko_gc_initialize()

declare ptr @__whacko_gc_alloc(i32, i32)

declare void @__whacko_gc_store_field_ptr(i32, ptr, ptr, ptr)

define void @_start() {
entry:
  call void @__whacko_gc_initialize()
  %"alloca~0" = alloca ptr, align 8
  %"result~305" = call ptr @__whacko_gc_alloc(i32 1, i32 ptrtoint (ptr getelementptr ({ ptr, ptr, i32, i32, i32 }, ptr null, i32 1) to i32))
  call void @"callable:[test/programs/math.wo]Foo.constructor;methodType:classType:[test/programs/math.wo]Foo<>#()=>voidType"(ptr %"result~305")
  store ptr %"result~305", ptr %"alloca~0", align 8
  %"275~inst" = call float @asinf(float 1.000000e+00)
  %"279~inst" = call double @"callable:[test/programs/math.wo]bar;functionType:()=>f64Type"()
  %"282~inst" = fsub double %"279~inst", 1.000000e+00
  %"287~inst" = call double @asin(double %"282~inst")
  %"288~inst" = load ptr, ptr %"alloca~0", align 8
  tail call void @free(ptr %"288~inst")
  ret void
}

define void @"callable:[test/programs/math.wo]Foo.constructor;methodType:classType:[test/programs/math.wo]Foo<>#()=>voidType"(ptr %0) {
entry:
  %"alloca~0" = alloca ptr, align 8
  store ptr %0, ptr %"alloca~0", align 8
  %"gep~306" = getelementptr { ptr, ptr, i32, i32, i32 }, ptr %"alloca~0", i32 4
  %"296~inst" = load i32, ptr %"gep~306", align 4
  %"gep~307" = getelementptr { ptr, ptr, i32, i32, i32 }, ptr %"alloca~0", i32 4
  store i32 0, ptr %"gep~307", align 4
  ret void
}

declare float @asinf(float)

define double @"callable:[test/programs/math.wo]bar;functionType:()=>f64Type"() {
entry:
  ret double 2.000000e+00
}

declare double @asin(double)

declare void @free(ptr) #0

declare void @__whacko_gc_visit(ptr)

define void @__visit_whacko_object(ptr %0) {
"entry~308":
  %"typeGEP~310" = getelementptr { ptr, ptr, i32, i32 }, ptr %0, i32 2
  %1 = load i32, ptr %"typeGEP~310", align 4
  switch i32 %1, label %"unreachable~309" [
    i32 1, label %"classType:[test/programs/math.wo]Foo<>"
    i32 2, label %"classType:[std/String.wo]String<>"
  ]

"unreachable~309":                                ; preds = %"entry~308"
  unreachable

"classType:[test/programs/math.wo]Foo<>":         ; preds = %"entry~308"
  ret void

"classType:[std/String.wo]String<>":              ; preds = %"entry~308"
  ret void
}

attributes #0 = { "alloc-family"="malloc" "allockind"="free" }
